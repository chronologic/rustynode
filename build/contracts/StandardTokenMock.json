{
  "contractName": "StandardTokenMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "a",
          "type": "uint256"
        },
        {
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeSub",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "a",
          "type": "uint256"
        },
        {
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeMul",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "a",
          "type": "uint256"
        },
        {
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeAdd",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b620f4240600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600081905550610c5c806100ab6000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009e57806318160ddd146100f857806323b872dd1461012157806370a082311461019a578063a293d1e8146101e7578063a9059cbb14610227578063d05c78da14610281578063dd62ed3e146102c1578063e6cb90131461032d575b600080fd5b34156100a957600080fd5b6100de600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061036d565b604051808215151515815260200191505060405180910390f35b341561010357600080fd5b61010b6104f4565b6040518082815260200191505060405180910390f35b341561012c57600080fd5b610180600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506104fa565b604051808215151515815260200191505060405180910390f35b34156101a557600080fd5b6101d1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610884565b6040518082815260200191505060405180910390f35b34156101f257600080fd5b61021160048080359060200190919080359060200190919050506108cd565b6040518082815260200191505060405180910390f35b341561023257600080fd5b610267600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108e6565b604051808215151515815260200191505060405180910390f35b341561028c57600080fd5b6102ab6004808035906020019091908035906020019091905050610b58565b6040518082815260200191505060405180910390f35b34156102cc57600080fd5b610317600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b8b565b6040518082815260200191505060405180910390f35b341561033857600080fd5b6103576004808035906020019091908035906020019091905050610c12565b6040518082815260200191505060405180910390f35b6000808214806103f957506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561040457600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156105cb5750828110155b80156105d75750600083115b80156106625750600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b156108775761067181846108cd565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061073a600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846108cd565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107c6600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610c12565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a36001915061087c565b600091505b509392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008282111515156108db57fe5b818303905092915050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156109375750600082115b80156109c25750600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b15610b4d57610a10600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108cd565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a9c600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610c12565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610b52565b600090505b92915050565b60008082840290506000841480610b795750828482811515610b7657fe5b04145b1515610b8157fe5b8091505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284019050838110151515610c2657fe5b80915050929150505600a165627a7a723058206ff7600a33d262904dfd5c6b5f427c4b3b0b0ca8c4430800aca63ff7f2c7abbb0029",
  "deployedBytecode": "0x606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009e57806318160ddd146100f857806323b872dd1461012157806370a082311461019a578063a293d1e8146101e7578063a9059cbb14610227578063d05c78da14610281578063dd62ed3e146102c1578063e6cb90131461032d575b600080fd5b34156100a957600080fd5b6100de600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061036d565b604051808215151515815260200191505060405180910390f35b341561010357600080fd5b61010b6104f4565b6040518082815260200191505060405180910390f35b341561012c57600080fd5b610180600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506104fa565b604051808215151515815260200191505060405180910390f35b34156101a557600080fd5b6101d1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610884565b6040518082815260200191505060405180910390f35b34156101f257600080fd5b61021160048080359060200190919080359060200190919050506108cd565b6040518082815260200191505060405180910390f35b341561023257600080fd5b610267600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108e6565b604051808215151515815260200191505060405180910390f35b341561028c57600080fd5b6102ab6004808035906020019091908035906020019091905050610b58565b6040518082815260200191505060405180910390f35b34156102cc57600080fd5b610317600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b8b565b6040518082815260200191505060405180910390f35b341561033857600080fd5b6103576004808035906020019091908035906020019091905050610c12565b6040518082815260200191505060405180910390f35b6000808214806103f957506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561040457600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156105cb5750828110155b80156105d75750600083115b80156106625750600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b156108775761067181846108cd565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061073a600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846108cd565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107c6600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610c12565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a36001915061087c565b600091505b509392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008282111515156108db57fe5b818303905092915050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156109375750600082115b80156109c25750600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b15610b4d57610a10600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108cd565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a9c600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610c12565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610b52565b600090505b92915050565b60008082840290506000841480610b795750828482811515610b7657fe5b04145b1515610b8157fe5b8091505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284019050838110151515610c2657fe5b80915050929150505600a165627a7a723058206ff7600a33d262904dfd5c6b5f427c4b3b0b0ca8c4430800aca63ff7f2c7abbb0029",
  "sourceMap": "83:172:23:-;;;133:120;;;;;;;;195:7;172:8;:20;181:10;172:20;;;;;;;;;;;;;;;:30;;;;226:8;:20;235:10;226:20;;;;;;;;;;;;;;;;212:11;:34;;;;83:172;;;;;;",
  "deployedSourceMap": "83:172:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1837:539:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;176:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:666:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;185:100:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:424:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51:130:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2380::7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:114:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1837:539:7;1894:12;2222:1;2212:6;:11;2211:53;;;;2262:1;2229:7;:19;2237:10;2229:19;;;;;;;;;;;;;;;:29;2249:8;2229:29;;;;;;;;;;;;;;;;:34;2211:53;2203:62;;;;;;;;2304:6;2272:7;:19;2280:10;2272:19;;;;;;;;;;;;;;;:29;2292:8;2272:29;;;;;;;;;;;;;;;:38;;;;2337:8;2316:38;;2325:10;2316:38;;;2347:6;2316:38;;;;;;;;;;;;;;;;;;2367:4;2360:11;;1837:539;;;;:::o;176:23:2:-;;;;:::o;1062:666:7:-;1134:12;1154:15;1172:7;:14;1180:5;1172:14;;;;;;;;;;;;;;;:26;1187:10;1172:26;;;;;;;;;;;;;;;;1154:44;;1228:6;1209:8;:15;1218:5;1209:15;;;;;;;;;;;;;;;;:25;;:83;;;;;1286:6;1272:10;:20;;1209:83;:129;;;;;1337:1;1328:6;:10;1209:129;:213;;;;;1409:8;:13;1418:3;1409:13;;;;;;;;;;;;;;;;1400:6;1384:8;:13;1393:3;1384:13;;;;;;;;;;;;;;;;:22;:38;1209:213;1205:519;;;1488:26;1496:10;1507:6;1488:7;:26::i;:::-;1459:7;:14;1467:5;1459:14;;;;;;;;;;;;;;;:26;1474:10;1459:26;;;;;;;;;;;;;;;:55;;;;1538:31;1546:8;:15;1555:5;1546:15;;;;;;;;;;;;;;;;1562:6;1538:7;:31::i;:::-;1520:8;:15;1529:5;1520:15;;;;;;;;;;;;;;;:49;;;;1591:29;1599:8;:13;1608:3;1599:13;;;;;;;;;;;;;;;;1613:6;1591:7;:29::i;:::-;1575:8;:13;1584:3;1575:13;;;;;;;;;;;;;;;:45;;;;1647:3;1631:28;;1640:5;1631:28;;;1652:6;1631:28;;;;;;;;;;;;;;;;;;1672:4;1665:11;;;;1205:519;1712:5;1705:12;;1062:666;;;;;;;:::o;1732:101::-;1785:12;1812:8;:16;1821:6;1812:16;;;;;;;;;;;;;;;;1805:23;;1732:101;;;:::o;185:100:6:-;236:4;260:1;255;:6;;248:14;;;;;;279:1;275;:5;268:12;;185:100;;;;:::o;634:424:7:-;687:12;735:6;711:8;:20;720:10;711:20;;;;;;;;;;;;;;;;:30;;:53;;;;;763:1;754:6;:10;711:53;:104;;;;;802:8;:13;811:3;802:13;;;;;;;;;;;;;;;;793:6;777:8;:13;786:3;777:13;;;;;;;;;;;;;;;;:22;:38;711:104;707:342;;;857:36;865:8;:20;874:10;865:20;;;;;;;;;;;;;;;;886:6;857:7;:36::i;:::-;834:8;:20;843:10;834:20;;;;;;;;;;;;;;;:59;;;;917:29;925:8;:13;934:3;925:13;;;;;;;;;;;;;;;;939:6;917:7;:29::i;:::-;901:8;:13;910:3;901:13;;;;;;;;;;;;;;;:45;;;;975:3;954:33;;963:10;954:33;;;980:6;954:33;;;;;;;;;;;;;;;;;;1002:4;995:11;;;;707:342;1037:5;1030:12;;634:424;;;;;:::o;51:130:6:-;102:4;114:6;127:1;123;:5;114:14;;146:1;141;:6;:20;;;;160:1;155;151;:5;;;;;;;;:10;141:20;134:28;;;;;;175:1;168:8;;51:130;;;;;:::o;2380::7:-;2451:14;2480:7;:15;2488:6;2480:15;;;;;;;;;;;;;;;:25;2496:8;2480:25;;;;;;;;;;;;;;;;2473:32;;2380:130;;;;:::o;289:114:6:-;340:4;352:6;365:1;361;:5;352:14;;382:1;379;:4;;372:12;;;;;;397:1;390:8;;289:114;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"../../chronologic/contracts/StandardToken.sol\";\n\ncontract StandardTokenMock is StandardToken {\n    function StandardTokenMock() {\n        balances[msg.sender] = 1000000;\n        totalSupply = balances[msg.sender];\n    }\n}",
  "sourcePath": "/home/logan/Work/v2/chronos/contracts/helpers/StandardTokenMock.sol",
  "ast": {
    "absolutePath": "/home/logan/Work/v2/chronos/contracts/helpers/StandardTokenMock.sol",
    "exportedSymbols": {
      "StandardTokenMock": [
        5781
      ]
    },
    "id": 5782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5759,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/home/logan/Work/v2/chronos/chronologic/contracts/StandardToken.sol",
        "file": "../../chronologic/contracts/StandardToken.sol",
        "id": 5760,
        "nodeType": "ImportDirective",
        "scope": 5782,
        "sourceUnit": 2797,
        "src": "26:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 5761,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2796,
              "src": "113:13:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$2796",
                "typeString": "contract StandardToken"
              }
            },
            "id": 5762,
            "nodeType": "InheritanceSpecifier",
            "src": "113:13:23"
          }
        ],
        "contractDependencies": [
          2122,
          2151,
          2539,
          2796
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5781,
        "linearizedBaseContracts": [
          5781,
          2796,
          2539,
          2122,
          2151
        ],
        "name": "StandardTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5779,
              "nodeType": "Block",
              "src": "162:91:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5765,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2557,
                        "src": "172:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5768,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5766,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5794,
                          "src": "181:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "181:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "172:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030303030",
                      "id": 5769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "195:7:23",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1000000"
                    },
                    "src": "172:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5771,
                  "nodeType": "ExpressionStatement",
                  "src": "172:30:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5772,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2126,
                      "src": "212:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5773,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2557,
                        "src": "226:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5776,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5774,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5794,
                          "src": "235:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "235:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "226:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "212:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5778,
                  "nodeType": "ExpressionStatement",
                  "src": "212:34:23"
                }
              ]
            },
            "documentation": null,
            "id": 5780,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "StandardTokenMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:2:23"
            },
            "payable": false,
            "returnParameters": {
              "id": 5764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "162:0:23"
            },
            "scope": 5781,
            "src": "133:120:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5782,
        "src": "83:172:23"
      }
    ],
    "src": "0:255:23"
  },
  "legacyAST": {
    "absolutePath": "/home/logan/Work/v2/chronos/contracts/helpers/StandardTokenMock.sol",
    "exportedSymbols": {
      "StandardTokenMock": [
        5781
      ]
    },
    "id": 5782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5759,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/home/logan/Work/v2/chronos/chronologic/contracts/StandardToken.sol",
        "file": "../../chronologic/contracts/StandardToken.sol",
        "id": 5760,
        "nodeType": "ImportDirective",
        "scope": 5782,
        "sourceUnit": 2797,
        "src": "26:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 5761,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2796,
              "src": "113:13:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$2796",
                "typeString": "contract StandardToken"
              }
            },
            "id": 5762,
            "nodeType": "InheritanceSpecifier",
            "src": "113:13:23"
          }
        ],
        "contractDependencies": [
          2122,
          2151,
          2539,
          2796
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5781,
        "linearizedBaseContracts": [
          5781,
          2796,
          2539,
          2122,
          2151
        ],
        "name": "StandardTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5779,
              "nodeType": "Block",
              "src": "162:91:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5765,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2557,
                        "src": "172:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5768,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5766,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5794,
                          "src": "181:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "181:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "172:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030303030",
                      "id": 5769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "195:7:23",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1000000"
                    },
                    "src": "172:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5771,
                  "nodeType": "ExpressionStatement",
                  "src": "172:30:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5772,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2126,
                      "src": "212:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5773,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2557,
                        "src": "226:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5776,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5774,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5794,
                          "src": "235:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "235:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "226:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "212:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5778,
                  "nodeType": "ExpressionStatement",
                  "src": "212:34:23"
                }
              ]
            },
            "documentation": null,
            "id": 5780,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "StandardTokenMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:2:23"
            },
            "payable": false,
            "returnParameters": {
              "id": 5764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "162:0:23"
            },
            "scope": 5781,
            "src": "133:120:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5782,
        "src": "83:172:23"
      }
    ],
    "src": "0:255:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-15T13:38:54.637Z"
}